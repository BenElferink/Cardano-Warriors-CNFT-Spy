{"version":3,"sources":["functions/cnft.js","components/Listings.js","constants/ADA_SYMBOL.js","App.js","index.js"],"names":["ENDPOINT","crawlCNFT","options","payload","project","types","search","undefined","sort","page","priceMin","priceMax","verified","nsfw","sold","Promise","resolve","reject","Axios","post","headers","then","response","data","results","catch","error","HtmlTooltip","styled","className","props","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","ListItem","listing","Card","sx","margin","borderRadius","overflow","followCursor","title","Typography","variant","asset","metadata","type","rarity","traits","map","trait","_id","items","item","name","CardActionArea","onClick","window","open","CardMedia","component","image","replace","alt","CardContent","gutterBottom","price","style","Date","createdAt","toLocaleString","Visibility","views","length","Favorite","favouriteCount","Listings","useState","setData","useEffect","interval","setInterval","warriors","console","clearInterval","fontFamily","fontWeight","textShadow","width","display","placeItems","CircularProgress","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a29ca9e1.chunk.js","sourcesContent":["import Axios from 'axios'\n\nconst ENDPOINT = 'https://api.cnft.io/market/listings'\n\nconst crawlCNFT = (options = {}) => {\n  const payload = {\n    project: options.project ?? 'Cardano Warriors',\n    types: options.types ?? ['listing', 'offer'],\n    search: options.search ?? undefined, // 'CardanoWarrior2682'\n    sort: options.sort ?? undefined, // { price: 1 }\n    page: options.page ?? 1,\n    priceMin: options.priceMin ?? 0,\n    priceMax: options.priceMax ?? undefined,\n    verified: options.verified ?? true,\n    nsfw: options.nsfw ?? false,\n    sold: options.sold ?? false,\n  }\n\n  return new Promise((resolve, reject) => {\n    Axios.post(ENDPOINT, payload, { headers: { 'Content-Type': 'application/json' } })\n      .then((response) => resolve(response.data.results))\n      .catch((error) => reject(error))\n  })\n}\n\nexport default crawlCNFT\n","import { Fragment, useEffect, useState } from 'react'\nimport { styled } from '@mui/material/styles'\nimport { tooltipClasses } from '@mui/material/Tooltip'\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { Favorite as FavoriteIcon, Visibility as VisibilityIcon } from '@mui/icons-material'\nimport ADA_SYMBOL from '../constants/ADA_SYMBOL'\nimport crawlCNFT from '../functions/cnft'\n\nfunction Listings({ title, options }) {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      crawlCNFT(options)\n        .then((warriors) => setData(warriors))\n        .catch((error) => console.error(error))\n    }, 1000 * 10)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [options])\n\n  return (\n    <div className='listings-container'>\n      <Typography variant='h4' component='div' sx={{ margin: '1rem 0', fontFamily: 'IndieFlower', fontWeight: 'bold', color: 'whitesmoke', textShadow: '-1px 1px 3px black' }}>\n        {title}\n      </Typography>\n      <div className='list'>\n        {data.length ? (\n          data.map((listing) => <ListItem key={listing._id} listing={listing} />)\n        ) : (\n          <div style={{ width: '100%', display: 'grid', placeItems: 'center' }}>\n            <CircularProgress color='secondary' />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst HtmlTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))\n\nfunction ListItem({ listing }) {\n  return (\n    <Card sx={{ margin: '1rem 2rem', borderRadius: '1rem', overflow: 'visible' }}>\n      <HtmlTooltip\n        followCursor\n        title={\n          <Fragment>\n            <Typography variant='body2'>\n              {listing.asset.metadata.type} - {listing.asset.metadata.rarity}\n            </Typography>\n            <br />\n            {listing.asset.metadata.traits.map((trait) => (\n              <Fragment key={`${listing._id}-${trait}`}>\n                <Typography variant='body3'>{trait}</Typography>\n                <br />\n              </Fragment>\n            ))}\n            <br />\n            {listing.asset.metadata.items.map((item) => (\n              <Fragment key={`${listing._id}-${item.name}`}>\n                <Typography variant='body3'>\n                  {item.name} - {item.rarity}\n                </Typography>\n                <br />\n              </Fragment>\n            ))}\n          </Fragment>\n        }>\n        <CardActionArea\n          onClick={() => window.open(`https://cnft.io/token/${listing._id}`, '_blank')}>\n          <CardMedia\n            component='img'\n            image={`https://ipfs.io/ipfs/${listing.asset.metadata.image.replace('ipfs://', '')}`}\n            alt=''\n          />\n          <CardContent>\n            <Typography gutterBottom variant='h5'>\n              {ADA_SYMBOL}\n              {listing.price / 1000000}\n            </Typography>\n            <Typography variant='body2' color='text.secondary'>\n              {listing.asset.metadata.name}\n              <br />\n              <span style={{ fontSize: '0.7rem' }}>\n                Listed: {new Date(listing.createdAt).toLocaleString()}\n              </span>\n              <br />\n              <br />\n              <span className='icon-wrapper'>\n                <span className='icon-item'>\n                  <VisibilityIcon fontSize='small' /> {listing.views.length}\n                </span>\n                <span className='icon-item'>\n                  <FavoriteIcon fontSize='small' /> {listing.favouriteCount}\n                </span>\n              </span>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </HtmlTooltip>\n    </Card>\n  )\n}\n\nexport default Listings\n","const ADA_SYMBOL = 'â‚³'\n\nexport default ADA_SYMBOL\n","import Listings from './components/Listings'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Listings title='Recently Listed' options={{ sold: false }} />\n      <Listings title='Recently Sold' options={{ sold: true }} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}